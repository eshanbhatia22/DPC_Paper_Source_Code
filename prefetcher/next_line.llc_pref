#include "cache.h"

void CACHE::llc_prefetcher_initialize() 
{
    cout << "LLC Next Line Prefetcher" << endl;
}

uint32_t CACHE::llc_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint32_t metadata_in)
{
	if (type == PREFETCH)
		return 0;
  	uint64_t pf_addr = ((addr>>LOG2_BLOCK_SIZE)+1) << LOG2_BLOCK_SIZE;

	uint32_t value = 5;

	//cout << current_core_cycle[cpu] << "\tLLC_OPER: At Addr: " << (addr>>LOG2_BLOCK_SIZE) <<  "\tCache Hit: " << +cache_hit << "\tIncoming Metadata: " << metadata_in << endl;
	//cout << current_core_cycle[cpu] << "\tLLC_OPER: Initiate Prefetch of Addr: " << (pf_addr>>LOG2_BLOCK_SIZE) << "\twith Metadata: " << value  << endl;
  	prefetch_line(ip, addr, pf_addr, FILL_LLC, value);
  	//cout << current_core_cycle[cpu] << "\tLLC_OPER: At Addr: " << (addr>>LOG2_BLOCK_SIZE) << "\tForwarding Metadata: " << metadata_in*metadata_in << endl;
  	return metadata_in*metadata_in;
}

uint32_t CACHE::llc_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{
  	//cout << current_core_cycle[cpu] << "\tLLC_FILL: At Addr: " << (addr>>LOG2_BLOCK_SIZE) << "\tIncoming Metadata: " << metadata_in << endl;
  	//cout << current_core_cycle[cpu] << "\tLLC_FILL: At Addr: " << (addr>>LOG2_BLOCK_SIZE) << "\tForwarding Metadata: " << metadata_in*metadata_in << endl;
  	return metadata_in*metadata_in;
}

void CACHE::llc_prefetcher_final_stats()
{
  cout << "LLC Next Line Prefetcher Final Stats: none" << endl;
}
